name: Build and Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Type check
      run: npm run type-check
      
    - name: Lint code
      run: npm run lint
      
    - name: Run tests
      run: npm run test:unit -- --run
      
    - name: Build for production
      run: npm run build
      
    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-dist
        path: dist/
        retention-days: 30

  backend:
    name: Build Backend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend-src/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend-src/requirements.txt
        
    - name: Lint backend code (if flake8 available)
      run: |
        pip install flake8
        flake8 backend-src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 backend-src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true
      
    - name: Create backend distribution
      run: |
        mkdir -p backend-dist
        cp -r backend-src/* backend-dist/
        pip freeze > backend-dist/requirements-frozen.txt
        
    - name: Upload backend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-dist
        path: backend-dist/
        retention-days: 30

  build-summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Display build summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Frontend | ${{ needs.frontend.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Backend | ${{ needs.backend.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Artifacts Created:" >> $GITHUB_STEP_SUMMARY
        echo "- **frontend-dist**: Production Vue.js build" >> $GITHUB_STEP_SUMMARY
        echo "- **backend-dist**: FastAPI application with dependencies" >> $GITHUB_STEP_SUMMARY
        
        if [ -d frontend-dist ]; then
          echo "- Frontend build size: $(du -sh frontend-dist | cut -f1)" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -d backend-dist ]; then
          echo "- Backend package size: $(du -sh backend-dist | cut -f1)" >> $GITHUB_STEP_SUMMARY
        fi